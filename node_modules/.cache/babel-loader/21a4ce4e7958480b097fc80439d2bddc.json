{"ast":null,"code":"var _jsxFileName = \"/Users/bowdenn/Desktop/playground/phonebook/src/components/Persons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Persons = ({\n  showAll,\n  persons,\n  newSearch\n}) => {\n  // My first conditional operator!\n  // const result = condition ? val1 : val2 Meaning if condition is True then val1 is used and val2 is used when False.\n  const peopleToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()) === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: peopleToShow.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [person.name, \" \", person.number]\n    }, person.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 44\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Persons;\nexport default Persons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Persons\");","map":{"version":3,"sources":["/Users/bowdenn/Desktop/playground/phonebook/src/components/Persons.js"],"names":["React","Persons","showAll","persons","newSearch","peopleToShow","filter","person","name","toLowerCase","includes","map","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AACjD;AACA;AACA,QAAMC,YAAY,GAAGH,OAAO,GAC1BC,OAD0B,GAE1BA,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCN,SAAS,CAACK,WAAV,EAAnC,MAAgE,IAAzF,CAFF;AAIA,sBAAQ;AAAA,cAAMJ,YAAY,CAACM,GAAb,CAAiBJ,MAAM,iBAAI;AAAA,iBAAwBA,MAAM,CAACC,IAA/B,OAAsCD,MAAM,CAACK,MAA7C;AAAA,OAAUL,MAAM,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA,YAA3B;AAAN;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,CARD;;KAAMP,O;AAUN,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nconst Persons = ({showAll, persons, newSearch}) => {\n  // My first conditional operator!\n  // const result = condition ? val1 : val2 Meaning if condition is True then val1 is used and val2 is used when False.\n  const peopleToShow = showAll\n  ? persons\n  : persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()) === true)\n\n  return (<div>{peopleToShow.map(person => <div key={person.name}>{person.name} {person.number}</div>)}</div>)\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}