{"ast":null,"code":"var _jsxFileName = \"/Users/bowdenn/Desktop/playground/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]); // Holds the current state of an input, updated with each keystroke\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newSearch, setNewSearch] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const peopleToShow = showAll ? persons : persons.filter(person => person.name.contains(newSearch) === true); // used to updated input\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n    console.log(newSearch);\n  }; // On form submit, stop refresh, create new object and check for duplicates\n\n\n  const handlePersonsChange = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber // date: new Date().toISOString(),\n      // important: Math.random() < 0.5,\n      // id: persons.length + 1,\n\n    };\n    checkDuplicateName(personObject);\n    setNewName('');\n    setNewNumber('');\n  }; // Checks current names in phonebook, alerting the user if they are trying to add a duplicate name\n\n\n  const checkDuplicateName = personInfo => {\n    for (let i in persons) {\n      if (personInfo.name.toLowerCase() === persons[i].name.toLowerCase()) {\n        window.alert(`${newName} is already added to phonebook`);\n        return;\n      }\n    }\n\n    setPersons(persons.concat(personInfo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"search: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchName,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePersonsChange,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [person.name, \" \", person.number]\n      }, person.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"SGfxAgtBQpQQnR0g05Ply7omkgg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bowdenn/Desktop/playground/phonebook/src/App.js"],"names":["React","useState","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","showAll","setShowAll","peopleToShow","filter","person","contains","handleNameChange","event","target","value","handleNumberChange","handleSearchChange","console","log","handlePersonsChange","preventDefault","personObject","checkDuplicateName","personInfo","i","toLowerCase","window","alert","concat","searchName","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ])\n  // Holds the current state of an input, updated with each keystroke\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const peopleToShow = showAll\n  ? persons\n  : persons.filter(person => person.name.contains(newSearch) === true)\n\n  // used to updated input\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n    console.log(newSearch)\n\n  }\n\n  \n  // On form submit, stop refresh, create new object and check for duplicates\n  const handlePersonsChange = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      // date: new Date().toISOString(),\n      // important: Math.random() < 0.5,\n      // id: persons.length + 1,\n    }\n    checkDuplicateName(personObject)\n    setNewName('')\n    setNewNumber('')\n  }\n  \n  // Checks current names in phonebook, alerting the user if they are trying to add a duplicate name\n  const checkDuplicateName = (personInfo) => {\n    for (let i in persons) {\n      if (personInfo.name.toLowerCase() === persons[i].name.toLowerCase()) {\n        window.alert(`${newName} is already added to phonebook`)\n        return\n      }\n    }\n    setPersons(persons.concat(personInfo))\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>search: <input value={searchName} onChange={handleSearchChange}/></div>\n      <h2>Add New</h2>\n      <form onSubmit={handlePersonsChange}>\n        <div>name: <input value={newName} onChange={handleNameChange} /></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        {persons.map(person => <div key={person.name}>{person.name} {person.number}</div>)}\n      </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}