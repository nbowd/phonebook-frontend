{"ast":null,"code":"var _jsxFileName = \"/Users/bowdenn/Desktop/playground/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const checkDuplicateName = personInfo => {\n    for (let person in persons) {\n      if (personInfo.name === person.name) {\n        window.alert(`${newName} is already added to phonebook`);\n        console.log('testsss');\n        setNewName('');\n        return;\n      }\n    }\n\n    console.log('new');\n    setPersons(persons.concat(personInfo));\n  };\n\n  const handlePersonsChange = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName // date: new Date().toISOString(),\n      // important: Math.random() < 0.5,\n      // id: persons.length + 1,\n\n    };\n    checkDuplicateName(personObject);\n    setNewName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePersonsChange,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bygYHvfrJMFWEb1nLk63ZhqUirc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bowdenn/Desktop/playground/phonebook/src/App.js"],"names":["React","useState","App","persons","setPersons","name","newName","setNewName","handleNameChange","event","target","value","checkDuplicateName","personInfo","person","window","alert","console","log","concat","handlePersonsChange","preventDefault","personObject","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BH,QAAQ,CAAC,CACvC;AAAEI,IAAAA,IAAI,EAAE;AAAR,GADuC,CAAD,CAAxC;AAGA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,UAAD,IAAgB;AACzC,SAAK,IAAIC,MAAT,IAAmBX,OAAnB,EAA4B;AAC1B,UAAIU,UAAU,CAACR,IAAX,KAAoBS,MAAM,CAACT,IAA/B,EAAqC;AACnCU,QAAAA,MAAM,CAACC,KAAP,CAAc,GAAEV,OAAQ,gCAAxB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAX,QAAAA,UAAU,CAAC,EAAD,CAAV;AACA;AACD;AACF;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAd,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAeN,UAAf,CAAD,CAAV;AAED,GAZD;;AAaA,QAAMO,mBAAmB,GAAIX,KAAD,IAAW;AACrCA,IAAAA,KAAK,CAACY,cAAN;AACA,UAAMC,YAAY,GAAG;AACnBjB,MAAAA,IAAI,EAAEC,OADa,CAEnB;AACA;AACA;;AAJmB,KAArB;AAMAM,IAAAA,kBAAkB,CAACU,YAAD,CAAlB;AACAf,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEa,mBAAhB;AAAA,8BACE;AAAA,0CACQ;AAAO,UAAA,KAAK,EAAEd,OAAd;AAAuB,UAAA,QAAQ,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,gBACGL,OAAO,CAACoB,GAAR,CAAYT,MAAM,iBAAI;AAAA,kBAAwBA,MAAM,CAACT;AAA/B,SAAUS,MAAM,CAACT,IAAjB;AAAA;AAAA;AAAA;AAAA,cAAtB;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnDD;;GAAMH,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const checkDuplicateName = (personInfo) => {\n    for (let person in persons) {\n      if (personInfo.name === person.name) {\n        window.alert(`${newName} is already added to phonebook`)\n        console.log('testsss')\n        setNewName('')\n        return\n      }\n    }\n    console.log('new')\n    setPersons(persons.concat(personInfo))\n\n  }\n  const handlePersonsChange = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      // date: new Date().toISOString(),\n      // important: Math.random() < 0.5,\n      // id: persons.length + 1,\n    }\n    checkDuplicateName(personObject)\n    setNewName('')\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form onSubmit={handlePersonsChange}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <p>\n        {persons.map(person => <div key={person.name}>{person.name}</div>)}\n      </p>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}